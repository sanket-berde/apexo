import * as tslib_1 from "tslib";
import * as React from 'react';
import { TextField } from 'office-ui-fabric-react/lib/TextField';
import { lorem } from 'office-ui-fabric-react/lib/utilities/exampleData';
import { Stack } from 'office-ui-fabric-react/lib/Stack';
var TextFieldMultilineExample = /** @class */ (function (_super) {
    tslib_1.__extends(TextFieldMultilineExample, _super);
    function TextFieldMultilineExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onChange = function (ev, newText) {
            var newMultiline = newText.length > 50;
            if (newMultiline !== _this.state.multiline) {
                _this.setState({ multiline: newMultiline });
            }
        };
        _this.state = { multiline: false };
        _this._lorem = lorem(100);
        return _this;
    }
    TextFieldMultilineExample.prototype.render = function () {
        return (React.createElement(Stack, { gap: 15, maxWidth: 300 },
            React.createElement(TextField, { label: "Standard", multiline: true, rows: 3 }),
            React.createElement(TextField, { label: "Disabled", multiline: true, rows: 3, disabled: true, value: this._lorem }),
            React.createElement(TextField, { label: "Non-resizable", multiline: true, resizable: false }),
            React.createElement(TextField, { label: "With auto adjusting height", multiline: true, autoAdjustHeight: true }),
            React.createElement(TextField, { label: "Switches from single to multiline if more than 50 characters are entered", multiline: this.state.multiline, onChange: this._onChange })));
    };
    return TextFieldMultilineExample;
}(React.Component));
export { TextFieldMultilineExample };
//# sourceMappingURL=TextField.Multiline.Example.js.map